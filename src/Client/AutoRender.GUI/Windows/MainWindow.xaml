<l:BaseWindow x:Class="AutoRender.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:l="clr-namespace:AutoRender"
        xmlns:uc="clr-namespace:AutoRender.UserControls"
        mc:Ignorable="d"
        x:Name="myMainWindow"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        ResizeMode="CanMinimize"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        MinHeight="300"
        MaxHeight="600"
        Width="1300"
        BorderThickness="0"
        Title="Melt AutoRender" Icon="/AutoRender;component/AutoRender.png">
    <l:BaseWindow.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <!-- General style for the  column headers -->
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="0, 0, 1, 0" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>
        <!-- Context menu for the WorkspaceItems -->
        <ContextMenu x:Key="WorkspaceItemContextMenu">
            <MenuItem Header="Start" IsEnabled="{Binding Path=CanStart}" Click="Start_Click" />
            <MenuItem Header="Stop" IsEnabled="{Binding Path=CanStop}" Click="Stop_Click" />
            <MenuItem Header="Pause" IsEnabled="{Binding Path=CanPause}" Click="Pause_Click" />
            <MenuItem Header="Edit Target Name" IsEnabled="{Binding Path=CanEditTargetName}" Click="EditTargetName_Click" />
            <MenuItem Header="Edit Source File" IsEnabled="{Binding Path=CanEditSourceName}" Click="EditSourceName_Click" />
            <MenuItem Header="Open Shotcut" IsEnabled="{Binding Path=CanOpenShotcut}" Click="OpenShotcut_Click" />
        </ContextMenu>
        <!-- Style to center the status column check box -->
        <Style x:Key="CenterGridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
    </l:BaseWindow.Resources>

    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem BorderThickness="0,1,0,0" BorderBrush="Black">
                <TextBlock Text="{Binding Status}" />
            </StatusBarItem>
        </StatusBar>
        <Grid Margin="0,0,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Label Grid.Column="0" Grid.Row="0" Content="Project Overview" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Height="25" />

            <DataGrid
                Grid.Column="0"
                Grid.Row="1"
                BorderThickness="1"

                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                VerticalAlignment="Stretch"
                VerticalContentAlignment="Stretch"

                Margin="10, 0, 0,0"
                Name="grdItems"

                ItemsSource="{Binding WorkspaceItems}"
                AutoGenerateColumns="False">
                <DataGrid.Resources>
                    <ResourceDictionary>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Setter Property="ContextMenu" Value="{StaticResource WorkspaceItemContextMenu}" />
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                            <Setter Property="IsEnabled"  Value="True" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{x:Null}" />
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                </Trigger>
                                <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ResourceDictionary>
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <!-- Status Column -->
                    <DataGridTemplateColumn HeaderStyle="{StaticResource CenterGridHeaderStyle}">
                        <!-- Status Column Header -->
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=DataContext.AllSelected, ElementName=myMainWindow}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <uc:WorkspaceItemStatus />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Context Menu -->
                    <DataGridTemplateColumn Header="">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <uc:ContextMenuButton ContextMenu="{DynamicResource WorkspaceItemContextMenu}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- TEXT COLUMNS -->
                    <!-- Project -->
                    <DataGridTemplateColumn Header="Project Name">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <uc:ProjectField ProjectName="{Binding ProjectName}" ShowCreate="{Binding ShowCreateProject}" Margin="0,0,10,0" CreateProjectClicked="ProjectField_CreateProjectClicked" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Source -->
                    <DataGridTemplateColumn Header="Source Name">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <uc:EditableListField IsEditing="{Binding SourceNameIsEditing, Mode=TwoWay}" SelectedItem="{Binding SourceName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  ItemsSource="{Binding Path=DataContext.SourceNames, ElementName=myMainWindow}" AllowEditing="{Binding SourceNameAllowEditing}" SelectionChanged="SourceNameChanged" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Target -->
                    <DataGridTemplateColumn Header="Target Name">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <uc:EditableTextField IsEditing="{Binding TargetNameIsEditing, Mode=TwoWay}" DisplayText="{Binding TargetName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AllowEditing="{Binding TargetNameAllowEditing}" TextChanged="TargetNameChanged" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Comments -->
                    <DataGridTemplateColumn Header="">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Label Content="{Binding Info}" Margin="10,0,10,0" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <UniformGrid  Grid.Column="1" Grid.Row="1" Rows="5" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="5,0,5,0">
                <Button Grid.Row="0" x:Name="btnBackup" Content="Backup" Margin="0,5,0,0" Click="btnBackup_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                <Button Grid.Row="1" x:Name="btnSettings" Content="Settings" Margin="0,5,0,0" Click="Settings_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                <Button Grid.Row="2" x:Name="btnReload" Content="ReLoad" Margin="0,5,0,0" Click="ReLoad_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                <Button Grid.Row="3" x:Name="btnRefresh" Content="Refresh" Margin="0,5,0,0" Click="Refresh_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                <Button Grid.Row="4" x:Name="btnStart" Content="Start Selected" Margin="0,5,0,0" Click="StartAll_Click" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            </UniformGrid>
        </Grid>
    </DockPanel>
</l:BaseWindow>